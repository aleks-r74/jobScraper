spring.application.name=jobScraper
spring.datasource.url=${JOBSCRAPER_DATASOURCE_URL}
spring.datasource.username=${JOBSCRAPER_DATASOURCE_USERNAME}
spring.datasource.password=${JOBSCRAPER_DATASOURCE_PASSWORD}
logging.level.com.alexportfolio.jobScraper=DEBUG
#
# Don't forget to set environment variables:
# LINKEDIN_USR
# LINKEDIN_PSW
# OPENAI_API_KEY
#
server.port:8888
# number of browsers
workers.count=1
# delafy after logging in, sec
workers.afterLoginDelay=10
# delay between parsings, min
parsing.delay=10
# remove cards older than expirationThreshold (days) from db every, delay(min)
cleanup.delay=1540
cleanup.expirationThreshold=30

rest.Key=123

# Open AI Settings
llmServiceOpenAi.tokenLimit=50000
llmServiceOpenAi.tokenPerDayLimit=190000
llmServiceOpenAi.requestsPerMinLimit=500
llmServiceOpenAi.model=gpt-4o-mini


# Defines which LLM should be used for description summarization
# And for decision making
# Options: llmServiceOllama or llmServiceOpenAi, or llmServicePetals

summarization.beanName=llmServiceOpenAi
assessment.beanName=llmServiceOpenAi


# ollama.url may be empty if running locally
ollama.url=http://127.0.0.1:11434
ollama.model=gemma:2b

spring.datasource.hikari.maximum-pool-size=4

